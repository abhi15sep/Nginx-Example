1. https://www.nginx.com/resources/glossary/nginx/
2. https://en.wikipedia.org/wiki/C10k_problem
3. https://trends.google.com/trends/explore?date=all&q=nginx
4. https://panic.com/transmit/
5. https://cyberduck.io/
6. https://filezilla-project.org/
7. https://fedoraproject.org/wiki/EPEL
8. http://nginx.org/en/docs/configure.html
9. https://www.freedesktop.org/wiki/Software/systemd/
10. https://www.nginx.com/resources/wiki/start/topics/examples/initscripts/
11. https://www.nginx.com/resources/wiki/start/topics/examples/systemd/
12. http://nginx.org/en/docs/windows.html
13. To install and launch Nginx on startup, we use:
    brew install nginx
    sudo brew services start nginx
14. Install nginx in ubuntu from source
    wget http://nginx.org/download/nginx-1.16.1.tar.gz
    tar -zxvf nginx-1.16.1.tar.gz
    cd nginx-1.16.1
    apt-get install build-essential
    ./configure
    apt-get install libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev
    ./configure
    http://nginx.org/en/docs/configure.html
    ./configure --sbin-path=/usr/bin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --with-pcre --pid-path=/var/run/nginx.pid --with-http_ssl_module
    make
    make install
    Save this file as /lib/systemd/system/nginx.service
    Add this content
    [Unit]
Description=The NGINX HTTP and reverse proxy server
After=syslog.target network.target remote-fs.target nss-lookup.target

[Service]
Type=forking
PIDFile=/run/nginx.pid
ExecStartPre=/usr/sbin/nginx -t
ExecStart=/usr/sbin/nginx
ExecReload=/usr/sbin/nginx -s reload
ExecStop=/bin/kill -s QUIT $MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target

Then to test: systemctl start nginx

15. To test nginx configuration
nginx -t

16. Regex match is having more preference then prefix match.
    Nginx order of priority is:
    1. Exact match: = Uri
    2. Preferential Prefix match:  ^~ Uri
    3. Regex match: ~* Uri
    4. Prefix match: Uri

17. Nginx Docs: Variables
http://nginx.org/en/docs/varindex.html
Article: If Is Evil: https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/

18. HTTP status code reference
https://developer.mozilla.org/en-US/docs/Web/HTTP/Status

19. Rewrite and Redirect
rewrite pattern Uri
return status Uri

20. try_files
Ex: It can be used in server context or location context.
server {
    try_files path1 path2 final

    location / {
        try_files path1 path2 final;
    }
}
It allows nginx to have check for a resource (path1), to respond with in any number of locations
 relative to root directive, with final argument that results in rewrite and re-evaluation.
 So only last argument works as rewrite and will use location directive, but all path before last 
  will check relative location to root. i.e rootpath/path1

  Named locations @ also can be used with try_files and it saves rewrite. 


21. Error Log: http://nginx.org/en/docs/ngx_core_module.html#error_log
Access Log: http://nginx.org/en/docs/http/ngx_http_log_module.html
Configuring Logging: https://docs.nginx.com/nginx/admin-guide/monitoring/logging/

22. Inheritance and directive types
server {
    root /site/demo;

    location {
        #Inherited root
        root /site/demo;
    }
}
Three main directive types are:
A) Standard directive
B) Array directive
C) Action directive

23. Understanding and Implementing FastCGI Proxying in Nginx
https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx
